#!/usr/bin/env bash
# Script to completely remove HyDRA configurations and provide cleanup instructions
# This script will remove all HyDRA-related configuration files and directories

# Display warning and ASCII art using a here document
cat <<"EOF"

--------------------------------------------------------
        .
       / \                 _  _      ___  ___   ___
      /^  \      _____    | || |_  _|   \|    |/ _ \
     /  _  \    |_____|   | __ | || | |) |   <  ___ |
    /  | | ~\             |_||_|\_, |___/|_|__|_| |_|
   /.-'   '-.\                  |__/
--------------------------------------------------------

.: WARNING :: This will remove all config files related to HyDRA :.

please type "HAIL HYDRA" to continue...
EOF

# Require specific confirmation phrase to proceed
# This prevents accidental execution of the uninstall script
read -r PROMPT_INPUT
[ "${PROMPT_INPUT}" == "HAIL HYDRA" ] || exit 0

# Display uninstall ASCII art
cat <<"EOF"

         _         _       _ _
 _ _ ___|_|___ ___| |_ ___| | |
| | |   | |   |_ -|  _| .'| | |
|___|_|_|_|_|_|___|_| |__,|_|_|


EOF

# Get script directory and import global functions
scrDir=$(dirname "$(realpath "$0")")
source "${scrDir}/global_fn.sh"
if [ $? -ne 0 ]; then
    echo "Error: unable to source global_fn.sh..."
    exit 1
fi

# Set configuration list file path
CfgLst="${scrDir}/restore_cfg.lst"
if [ ! -f "${CfgLst}" ]; then
    echo "ERROR: '${CfgLst}' does not exist..."
    exit 1
fi

# Create backup directory for removed files
# This allows recovery if the user changes their mind
BkpDir="${HOME}/.config/cfg_backups/$(date +'%y%m%d_%Hh%Mm%Ss')_remove"
mkdir -p "${BkpDir}"

# Process each configuration entry in the list
cat "${CfgLst}" | while read lst; do
    # Extract path and configuration file name from pipe-separated values
    # awk -F '|' uses pipe as field separator
    pth=$(echo "${lst}" | awk -F '|' '{print $3}')  # Third field: path
    pth=$(eval echo "${pth}")                        # Expand variables like $HOME
    cfg=$(echo "${lst}" | awk -F '|' '{print $4}')  # Fourth field: config file name

    # Process each configuration file (space-separated list)
    echo "${cfg}" | xargs -n 1 | while read -r cfg_chk; do
        # Skip empty paths
        [[ -z "${pth}" ]] && continue
        
        # Check if file or directory exists
        if [ -d "${pth}/${cfg_chk}" ] || [ -f "${pth}/${cfg_chk}" ]; then
            # Get relative path for backup (remove $HOME prefix)
            tgt=$(echo "${pth}" | sed "s+^${HOME}++g")
            
            # Create backup directory structure
            if [ ! -d "${BkpDir}${tgt}" ]; then
                mkdir -p "${BkpDir}${tgt}"
            fi
            
            # Move file/directory to backup location
            mv "${pth}/${cfg_chk}" "${BkpDir}${tgt}"
            echo -e "\033[0;34m[removed]\033[0m ${pth}/${cfg_chk}"
        fi
    done
done

# Remove main DENv directories from user's home
# These directories contain DENv-specific data and configurations
[ -d "$HOME/.config/denv" ] && rm -rf "$HOME/.config/denv"      # Main config directory
[ -d "$HOME/.cache/denv" ] && rm -rf "$HOME/.cache/denv"        # Cache directory  
[ -d "$HOME/.local/state/denv" ] && rm -rf "$HOME/.local/state/denv"  # State directory

# Display manual cleanup instructions
# Some files require manual removal due to permissions or safety
cat <<"NOTE"
-------------------------------------------------------
.: Manual action required to complete uninstallation :.
-------------------------------------------------------

Remove DENv related backups/icons/fonts/themes manually from these paths
$HOME/.config/cfg_backups               # remove all previous backups
$HOME/.local/share/fonts                # remove fonts from here
$HOME/.local/share/icons                # remove fonts from here
$HOME/.local/share/themes               # remove fonts from here
$HOME/.icons                            # remove icons from here
$HOME/.themes                           # remove themes from here

Revert back bootloader/pacman/sddm settings manually from these backups
/boot/loader/entries/*.conf.denv.bkp    # restore systemd-boot from this backup
/etc/default/grub.denv.bkp              # restore grub from this backup
/boot/grub/grub.denv.bkp                # restore grub from this backup
/usr/share/grub/themes                  # remove grub themes from here
/etc/pacman.conf.denv.bkp               # restore pacman from this backup
/etc/sddm.conf.d/kde_settings.denv.bkp  # restore sddm from this backup
/usr/share/sddm/themes                  # remove sddm themes from here

Uninstall the packages manually that are no longer required based on these list
${scrDir}/pkg_core.lst
${scrDir}/pkg_extra.lst
NOTE
