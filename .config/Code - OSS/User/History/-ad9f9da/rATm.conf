include denv.conf
# -- fonts --------------------------------------------------------------

font_family                     FiraCode Nerd Font
bold_font                       Fira Code Bold
italic_font                     Maple Mono Italic
italic_font                     Maple Mono Italic
bold_italic_font                Maple Mono Bold Italic

font_size 10.0
# modify_font                     baseline -1
# modify_font                     strikethrough_position 8px

modify_font                     underline_position 150%
modify_font                     underline_thickness 1.05
modify_font                     cell_height 110%

# disable ligatures when the cursor is over them so they are easier to edit
disable_ligatures               cursor
force_ltr                       yes

# -- cursor -------------------------------------------------------------

cursor_shape                    block
cursor_trail                    1
cursor_stop_blinking_after      5.0
pointer_shape_when_dragging     hand

# -- mouse --------------------------------------------------------------

copy_on_select                  yes
# -1 effectively means infinite scrollback
scrollback_lines                10000
# The modifiers to use rectangular selection (i.e. to select text in a
# rectangular block with the mouse)
# rectangle_select_modifiers ctrl+alt
mouse_hide_wait                 10.0
# Set the active window to the window under the mouse when moving the mouse around
focus_follows_mouse             no
# map cmd+left click to open URLs
# mouse_map super+left release grabbed,ungrabbed mouse_handle_click link
# mouse_map cmd+shift+left release ungrabbed pass_selection_to_program $HOME/.config/kitty/scripts/safari-with-http
mouse_map cmd+left release ungrabbed pass_selection_to_program /usr/bin/open
mouse_map cmd+left click grabbed,ungrabbed mouse_handle_click selection link prompt

# -- bells --------------------------------------------------------------

enable_audio_bell               no
window_alert_on_bell            no
visual_bell_duration            0.0
visual_bell_color               none
visual_bell_duration            0.0

# -- windows ------------------------------------------------------------

remember_window_size            yes
enabled_layouts                 splits, stack
window_border_width             1.0
window_margin_width             0
window_padding_width            10 5 10
placement_strategy              top-left
inactive_text_alpha             0.7
dynamic_background_opacity      yes
dim_opacity                     0.5
draw_minimal_borders            yes
hide_window_decorations         yes
background_opacity              0.9

# -- tabs ---------------------------------------------------------------

# fade, slant, separator, powerline (slanted, angled, round), custom
tab_bar_style                   custom
tab_separator                   ""
# REF: https://github.com/kovidgoyal/kitty/discussions/4447
tab_fade                        0 0 0 0

tab_title_template              "{fmt.fg._415c6d}{fmt.bg.default} ï‘„ {index}:{f'{title[:6]}â€¦{title[-6:]}' if title.rindex(title[-1]) > 25 else title}{' [ï¡ˆ]' if layout_name == 'stack' else ''} "
active_tab_title_template       "{fmt.fg._83b6af}{fmt.bg.default} ï†’ {index}:{f'{title[:6]}â€¦{title[-6:]}' if title.rindex(title[-1]) > 25 else title}{' [ï¡ˆ]' if layout_name == 'stack' else ''} "
# tab_title_template            "{fmt.fg._515151}{fmt.bg.default}î‚¶{fmt.fg._abb2bf}{fmt.bg._515151} {index}:{title} {fmt.fg._515151}{fmt.bg.default}î‚´ "
# active_tab_title_template     "{fmt.fg._83a598}{fmt.bg.default}î‚¶{fmt.fg._282c34}{fmt.bg._83a598} {index}:{title}{" Z" if layout_name == "stack" else ""} {fmt.fg._83a598}{fmt.bg.default}î‚´ "

tab_bar_edge                    top
tab_bar_align                   left
tab_bar_margin_width            0.0
tab_bar_margin_height           10.0 0.0
active_tab_font_style           bold-italic
inactive_tab_font_style         normal
tab_bar_min_tabs                1
tab_activity_symbol             none
bell_on_tab                     no
# or "ðŸ”” "

# tab_bar_background        none

# -- advanced -----------------------------------------------------------

shell                           /usr/bin/fish
shell_integration               enabled
allow_remote_control            yes
listen_on                       unix:/tmp/kitty-{kitty_pid}.sock
editor                          nvim
term                            xterm-kitty
update_check_interval           0

# -- includes -----------------------------------------------------------

include nerdfonts.conf
include ./themes/gruvbox-material-dark-hard.conf

# -- misc ---------------------------------------------------------------
# or 0, 1, 2 (number of tabs)
# REF: https://sw.kovidgoyal.net/kitty/conf/?highlight=margin#opt-kitty.confirm_os_window_close
confirm_os_window_close               -1
dynamic_background_opacity            yes
# url_style can be one of: none, single, double, curly
url_style                             curly
#: The modifier keys to press when clicking with the mouse on URLs to
#: open the URL
open_url_with                         default
#: The program with which to open URLs that are clicked on. The
#: special value default means to use the operating system's default
#: URL handler.
url_prefixes                          http https file ftp
#: The set of URL prefixes to look for when detecting a URL under the
#: mouse cursor.
copy_on_select                        yes
#: Copy to clipboard or a private buffer on select. With this set to
#: clipboard, simply selecting text with the mouse will cause the text
#: to be copied to clipboard. Useful on platforms such as macOS that
#: do not have the concept of primary selections. You can instead
#: specify a name such as a1 to copy to a private kitty buffer
#: instead. Map a shortcut with the paste_from_buffer action to paste
#: from this private buffer. For example::
#:     map cmd+shift+v paste_from_buffer a1
#: Note that copying to the clipboard is a security risk, as all
#: programs, including websites open in your browser can read the
#: contents of the system clipboard.
strip_trailing_spaces                  never
#: Remove spaces at the end of lines when copying to clipboard. A
#: value of smart will do it when using normal selections, but not
#: rectangle selections. always will always do it.
select_by_word_characters             @-./_~?&=%+#

sync_to_monitor                       yes
pointer_shape_when_dragging           hand
# How much to dim text that has the DIM/FAINT attribute set. 1.0 means no dimming and
# 0.0 means fully dimmed (i.e. invisible).
allow_hyperlinks                      yes
close_on_child_death                  yes
# clipboard_control write-clipboard write-primary read-clipboard
clipboard_control write-clipboard write-primary read-clipboard-ask read-primary-ask

# https://github.com/kovidgoyal/kitty/issues/719
# https://www.reddit.com/r/neovim/comments/qqf4nn/psa_you_can_use_neovim_as_the_kitty_terminal/
# https://www.reddit.com/r/KittyTerminal/comments/l73ulu/pager/
scrollback_pager nvim --noplugin -u ~/.dotfiles/config/nvim/vimrc -c "syntax on|set t_Co=256|set termguicolors|setlocal nomodifiable nonumber nolist showtabline=0 foldcolumn=0 ft=man|colorscheme habamax|hi Normal guifg=#bcbcbc guibg=NONE gui=NONE cterm=NONE" -c "autocmd VimEnter * cnoremap q q!|nnoremap q :q!<CR>|normal G" -c "silent write! /tmp/kitty_scrollback_buffer | te cat /tmp/kitty_scrollback_buffer - "

globinclude maps.conf

# -- fin --------------------------------------------------------------------


# -- keymaps ------------------------------------------------------------
# Enhanced vim-style keybindings with tmux precedence

clear_all_shortcuts yes

# The value of kitty_mod is used as the modifier for all default shortcuts
kitty_mod               ctrl+shift

map kitty_mod+w         quit
map kitty_mod+v         paste_from_clipboard
map kitty_mod+c         copy_to_clipboard

map ctrl+/ launch --type=overlay --stdin-source=@screen_scrollback fzf --no-sort --no-mouse -i

# Vim-style word jumping (alt as meta key)
map alt+left send_text all \x1b\x62 # jump one word left
map alt+right send_text all \x1b\x66 # jump one word right
map alt+b send_text all \x1b\x62 # vim-style word back
map alt+w send_text all \x1b\x66 # vim-style word forward

# Font size adjustments
map ctrl+equal change_font_size  all +1.0
map ctrl+plus change_font_size   all +1.0
map ctrl+minus change_font_size  all -1.0
map ctrl+0 change_font_size      all 0

# -- Window management -----------------------------------------------------

# Vim-style navigation with consistent ctrl modifiers
# These will pass through to tmux/nvim when appropriate
map ctrl+h kitten pass_keys.py neighboring_window left   ctrl+h "^.*nvim.*$"
map ctrl+j kitten pass_keys.py neighboring_window bottom ctrl+j "^.*nvim.*$"
map ctrl+k kitten pass_keys.py neighboring_window top    ctrl+k "^.*nvim.*$"
map ctrl+l kitten pass_keys.py neighboring_window right  ctrl+l "^.*nvim.*$"

# Window organization
map kitty_mod+d        detach_window ask
map kitty_mod+t        move_window_to_top
map kitty_mod+f        move_window_forward
map kitty_mod+b        move_window_backward
map kitty_mod+n        next_window
map kitty_mod+p        previous_window

# Close window with q (vim-like)
map kitty_mod+q        close_window
map kitty_mod+x        close_window  # alternative binding

# Resizing (vim-style with r for resize mode)
map kitty_mod+r        start_resizing_window

# More vim/tmux-like split creation
map kitty_mod+\        launch --location=hsplit --cwd=last_reported
map kitty_mod+|        launch --location=hsplit --cwd=last_reported  # Alternative binding
map kitty_mod+-        launch --location=vsplit --cwd=last_reported
map kitty_mod+_        launch --location=vsplit --cwd=last_reported  # Alternative binding

# Direct window selection
map kitty_mod+1 first_window
map kitty_mod+2 second_window
map kitty_mod+3 third_window
map kitty_mod+4 fourth_window
map kitty_mod+5 fifth_window
map kitty_mod+6 sixth_window
map kitty_mod+7 seventh_window
map kitty_mod+8 eighth_window
map kitty_mod+9 ninth_window
map kitty_mod+0 tenth_window

# -- Tab management --------------------------------------------------------
# Consistent with tmux, avoiding conflicts

action_alias            launch_tab launch --type=tab --cwd=last_reported
map alt+t               launch --type=tab --cwd=last_reported  # Changed from alt+c to avoid tmux conflict
map alt+w               close_tab  # Additional vim-like binding
map alt+k               close_tab  # Keep original binding
map alt+n               next_tab   # Consistent with tmux
map alt+p               previous_tab
map alt+f               move_tab_forward
map alt+b               move_tab_backward
map alt+h               previous_tab  # Additional vim-like binding
map alt+l               next_tab      # Additional vim-like binding

map alt+d               detach_tab
map alt+s               select_tab
map alt+r               set_tab_title  # Changed from alt+t

map alt+enter          toggle_maximized
map alt+z              toggle_maximized  # Additional vim-like binding (like tmux zoom)
map alt+shift+n         next_layout

# Direct tab selection
map alt+1 goto_tab 1
map alt+2 goto_tab 2
map alt+3 goto_tab 3
map alt+4 goto_tab 4
map alt+5 goto_tab 5
map alt+6 goto_tab 6
map alt+7 goto_tab 7
map alt+8 goto_tab 8
map alt+9 goto_tab 9
map alt+0 goto_tab 10

# -- scrolling -------------------------------------------------------------------

# Vim-style scrolling
map ctrl+shift+down              scroll_line_down
map ctrl+shift+up                scroll_line_up
map ctrl+shift+k                 scroll_to_prompt -1
map ctrl+shift+j                 scroll_to_prompt 1
map ctrl+shift+u                 scroll_page_up    # Vim-like page up
map ctrl+shift+d                 scroll_page_down  # Vim-like page down
map ctrl+shift+page_up           scroll_page_up
map ctrl+shift+page_down         scroll_page_down
map ctrl+shift+home              scroll_home
map ctrl+shift+end               scroll_end
map ctrl+shift+g                 scroll_end  # Vim-like G to end
map ctrl+shift+0                 scroll_home # Vim-like gg to start

map ctrl+shift+h                 show_scrollback
map ctrl+shift+c clear_terminal  scroll active

# -- marks and select mode -------------------------------------------------------------------

# Add vim-style visual selection mode
map kitty_mod+v       kitten hints --type path --program -
map kitty_mod+y       kitten hints --type path --program @

# Vim-style search in terminal
map kitty_mod+/       show_last_command_output
map kitty_mod+f       launch --type=overlay --stdin-source=@screen_scrollback /bin/sh -c "grep --color=always -i ''"

# -- miscellaneous -------------------------------------------------------------------

map ctrl+shift+f1             launch --type=os-window --cwd=~/.dotfiles
map ctrl+shift+f2             show_kitty_env_vars
map ctrl+shift+f4             edit_config_file
map ctrl+shift+f5             load_config_file
map ctrl+shift+f6             debug_config
map ctrl+shift+f12            open_url https://localhost:3000/

# Quick command access
map kitty_mod+:               show_last_command_output

# -- clipboard -------------------------------------------------------------------

map alt+shift+v combine : launch --stdin-source=@last_cmd_output --type=clipboard : paste_from_clipboard
map alt+shift+c launch --stdin-source=@last_cmd_output --type=clipboard
